; +----------------------------------------------------------------------------+
; | This file is part of the Mojavi package.                                   |
; | Copyright (c) 2003, 2004 Sean Kerr.                                        |
; |                                                                            |
; | For the full copyright and license information, please view the LICENSE    |
; | file that was distributed with this source code. You can also view the     |
; | LICENSE file online at http://www.mojavi.org.                              |
; +----------------------------------------------------------------------------+
; | MOJAVI FACTORY CONFIGURATION                                               |
; | -------------------------------------------------------------------------- |
; | This configuration has 4 categories, all of which are required:            |
; |                                                                            |
; | 1. request         - The Request class implementation.                     |
; | 2. storage         - The Storage class implementation.                     |
; | 3. user            - The User class implementation.                        |
; | 4. security_filter - The SecurityFilter class implementation.              |
; |                                                                            |
; | NOTE: The order of the factory specification is important. Do not reorder  |
; |       them!                                                                |
; | -------------------------------------------------------------------------- |
; | REQUIRED KEYS:                                                             |
; |                                                                            |
; | 1. class - The class name providing the custom implementation.             |
; |                                                                            |
; | OPTIONAL KEYS:                                                             |
; |                                                                            |
; | 1. file  - The filesystem path to the class file. If the path is relative, |
; |            it will be relative to the MO_WEBAPP_DIR Mojavi application     |
; |            setting.                                                        |
; | -------------------------------------------------------------------------- |
; | PARAMETER KEYS:                                                            |
; |                                                                            |
; | Parameter keys specify a parameter name and value to be passed to the      |
; | initialization method of the class instance. Any number of parameters can  |
; | be passed.                                                                 |
; |                                                                            |
; |     param.<name> = "<value>"                                               |
; |                                                                            |
; | Parameter keys can also be used to pass an array of values instead of a    |
; | single value.                                                              |
; |                                                                            |
; |     param.<name>.1 = "<value1>"                                            |
; |     param.<name>.2 = "<value2>"                                            |
; |                                                                            |
; | For a list of available parameters for a class, browse the class source    |
; | or documentation.                                                          |
; | -------------------------------------------------------------------------- |
; | KEYWORDS:                                                                  |
; |                                                                            |
; | The following keywords may exist in file or param values:                  |
; |                                                                            |
; | 1. %MO_APP_DIR%                                                            |
; | 2. %MO_LIB_DIR%                                                            |
; | 3. %MO_MODULE_DIR%                                                         |
; | 4. %MO_WEBAPP_DIR%                                                         |
; +----------------------------------------------------------------------------+

; +----------------------------------------------------------------------------+
; | Specify which Request implementation to use.                               |
; +----------------------------------------------------------------------------+
[request]

    class = "WebRequest"

; +----------------------------------------------------------------------------+
; | Specify which Storage implementation to use.                               |
; +----------------------------------------------------------------------------+
[storage]

    ; Mojavi標準の状態だと、1アクセスにつき必ずUserクラスが読み取り操作と書き込み操作を行ってくる。
    ; そしてそれを、SessionStorage がPHPのセッション読み書きとして実装している。
    ;
    ; セッションを使っていない携帯サイトにおいて、これは何の意味もないし、
    ; ヘビーアクセスにさらされて、さらにディスクパワーの乏しい仮想サーバだと
    ; セッションファイルへのアクセス負荷はバカに出来ない。
    ;
    ; そこで、NullStorageをStorageに当ててUserを実質無効化する。
    ;
    ; ま、本当は以下の改良を行って解決すべきとは思うが、メンドクサイ...
    ;
    ;     ・無条件でBasicSecurityUserを使ってるのをやめる。
    ;       BasicSecurityUserを使ってる限り、有効なStorageが必ず必要になる。
    ;       必要なモジュールだけ(Adminとか)に限るように設定する。
    ;
    ;     ・BasicSecurityUserが必要ない場合は、その代替として User をオーバーライドした
    ;       改良クラスを当てる。改良点は...
    ;           ・initialize でいきなりStorageに読みに行ってるのをやめる。
    ;             必要が生じてから初期化する。
    ;           ・shutdown で必ずStorageに書きに行くのをやめる。
    ;             書き込む内容があるときのみに制限する。
    ;
    ;     ・SessionStorageも initialize で必ずsession_startを呼ぶ(これだけでセッションファイルが
    ;       作成されてしまう)ので、読み書きの必要が生じたときに初めて session_startを呼ぶように
    ;       改良したクラスに差し替える。

    ; class = "SessionStorage"
    class = "NullStorage"

; +----------------------------------------------------------------------------+
; | Specify which User implementation to use.                                  |
; +----------------------------------------------------------------------------+
[user]

    ; class = "BasicSecurityUser"
    class = "User"

; +----------------------------------------------------------------------------+
; | Specify which SecurityFilter implementation to use.                        |
; +----------------------------------------------------------------------------+
[security_filter]

    class = "BasicSecurityFilter"
